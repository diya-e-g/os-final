#include <stdio.h>

struct processes {
    int id;       // Process ID
    int bt;       // Burst Time
    int at;       // Arrival Time
    int ct;       // Completion Time
    int tat;      // Turnaround Time
    int wt;       // Waiting Time
    int priority; // Priority
};

int main() {
    int n, i, j, sumtat = 0, sumwt = 0, ct = 0;
    float avgtat = 0, avgwt = 0;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct processes process[n], temp;

    printf("Enter the priority, process ID, arrival time, and burst time:\n");
    for (i = 0; i < n; i++) {
        scanf("%d %d %d %d", &process[i].priority, &process[i].id, &process[i].at, &process[i].bt);
    }

    // Sorting processes by arrival time
    for (j = 1; j < n; j++) {
        for (i = 0; i < n - j; i++) {
            if (process[i].at > process[i + 1].at) {
                temp = process[i];
                process[i] = process[i + 1];
                process[i + 1] = temp;
            }
        }
    }

    // Finding the order of executing the processes
    for (i = 0; i < n; i++) {
        int min = i;
        for (j = i + 1; j < n; j++) {
            if (process[j].priority < process[min].priority && process[j].at <= ct) {
                min = j;
            }
        }
        // Swap to get the highest priority job at position i
        temp = process[i];
        process[i] = process[min];
        process[min] = temp;

        // Update current time
        if (ct < process[i].at) {
            ct = process[i].at; // Wait for the next process to arrive
        }
        ct += process[i].bt;
        process[i].ct = ct;
        process[i].tat = process[i].ct - process[i].at;
        process[i].wt = process[i].tat - process[i].bt;

        sumtat += process[i].tat;
        sumwt += process[i].wt;
    }

    // Finding average WT and TAT
    avgtat = (float)sumtat / n;
    avgwt = (float)sumwt / n;

    // Printing the details
    printf("------PRIORITY SCHEDULING------\n");
    printf("\nPID\tPriority\tAT\tBT\tCT\tTAT\tWT\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t%d\t%d\t%d\t%d\n", process[i].id, process[i].priority, process[i].at, process[i].bt, process[i].ct, process[i].tat, process[i].wt);
    }
    printf("AVERAGE WAITING TIME: %.2f\n", avgwt);
    printf("AVERAGE TURNAROUND TIME: %.2f\n", avgtat);

    return 0;
}
